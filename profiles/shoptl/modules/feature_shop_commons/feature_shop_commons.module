<?php
/**
 * @file
 * Code for the Feature Shop Commons feature.
 */

include_once 'feature_shop_commons.features.inc';

/**
 * Implements hook_form_alter().
 */
function feature_shop_commons_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'commerce_cart_add_to_cart_form_') === 0) {
    $stock = (int) $form_state['default_product']->commerce_stock[LANGUAGE_NONE][0]['value'];

    // Replace the quantity field by a select box.
    $form['quantity']['#type'] = 'select';
    unset($form['quantity']['#size']);
    $form['quantity']['#options'] = array();
    for ($i = 1, $n = min($stock, 10) ; $i <= $n ; ++$i) {
      $form['quantity']['#options'][$i] = $i;
    }

    // Change the submit button label according to the stock.
    if ($stock == 0) {
      $form['quantity']['#options'][0] = 0;
      $form['quantity']['#disabled'] = TRUE;
      $form['submit']['#value'] = 'Épuisé';
      $form['submit']['#disabled'] = TRUE;
      $form['submit']['#attributes']['class'][] = 'out-of-stock';
      $form['#attributes']['class'][] = 'out-of-stock';
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function feature_shop_commons_form_views_form_commerce_cart_form_default_alter(&$form, &$form_state, $form_id) {
  $order = $form_state['order'];
  $interval = _feature_shop_commons_get_cart_expiration_interval();
  $js_path = drupal_get_path('module', 'feature_shop_commons') . '/js';
  $form['expiration'] = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('expiration'), 'data-cart-countdown' => ($order->changed + $interval)),
    '#weight' => $form['actions']['#weight'],
    'message' => array(
      '#markup' => 'Validité du panier : <span>' . format_date($order->changed + $interval) . '</span>',
    ),
    '#attached' => array(
      'js' => array(
        $js_path . '/jquery.countdown/jquery.countdown.min.js',
        $js_path . '/cart-countdown.js',
      ),
    ),
  );
  $form['actions']['#weight'] += 1;

  // Ensure things are clear when cart has expired.
  if ($order->changed + $interval <= REQUEST_TIME) {
    // Show an accurate message.
    $form['expiration']['message']['#markup'] = 'Validité du panier : <span>Votre panier a expiré !</span>';
    $form['expiration']['#attributes']['class'][] = 'disabled';
    $form['expiration']['#attributes']['class'][] = 'cart-expired';
    unset($form['expiration']['#attached']);

    // Disable buttons.
    $form['actions']['submit']['#disabled'] = TRUE;
    $form['actions']['checkout']['#disabled'] = TRUE;
    $form['edit_delete']['#disabled'] = TRUE;
  }
}

/**
 * Implements hook_default_rules_configuration_alter().
 */
function feature_shop_commons_default_rules_configuration_alter(&$configs) {
  if (!empty($configs['commerce_cart_expiration_delete_expired_carts'])) {
    $configs['commerce_cart_expiration_delete_expired_carts']->active = FALSE;
  }
}


// -----------------------------------------------------------------------------
// Helpers.

/**
 * Get the interval configured in Rules, if any.
 *
 * @return number
 *   The expiration interval in seconds.
 */
function _feature_shop_commons_get_cart_expiration_interval() {
  $interval = 0;
  $config = rules_config_load('commerce_cart_expiration_delete_expired_carts_custom');
  foreach ($config->actions() as $action) {
    if ($action->getElementName() == 'commerce_cart_expiration_delete_orders') {
      $interval = $action->settings['interval'];
    }
  }
  return $interval;
}
