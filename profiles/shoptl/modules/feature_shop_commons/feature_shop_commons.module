<?php
/**
 * @file
 * Code for the Feature Shop Commons feature.
 */

include_once 'feature_shop_commons.features.inc';

/**
 * Implements hook_form_alter().
 */
function feature_shop_commons_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'commerce_cart_add_to_cart_form_') === 0) {
    $stock = (int) $form_state['default_product']->commerce_stock[LANGUAGE_NONE][0]['value'];

    // Replace the quantity field by a select box.
    $form['quantity']['#type'] = 'select';
    unset($form['quantity']['#size']);
    $form['quantity']['#options'] = array();
    for ($i = 1, $n = min($stock, 10) ; $i <= $n ; ++$i) {
      $form['quantity']['#options'][$i] = $i;
    }

    // Change the submit button label according to the stock.
    if ($stock == 0) {
      $form['quantity']['#options'][0] = 0;
      $form['quantity']['#disabled'] = TRUE;
      $form['submit']['#value'] = 'Épuisé';
      $form['submit']['#disabled'] = TRUE;
      $form['submit']['#attributes']['class'][] = 'out-of-stock';
      $form['#attributes']['class'][] = 'out-of-stock';
    }
  }

  if ($form_id == 'commerce_checkout_form_checkout') {
    if (isset($form['customer_profile_billing'])) {
      $form['customer_profile_billing']['#title'] = t($form['customer_profile_billing']['#title']);
    }
    if (isset($form['customer_profile_shipping'])) {
      $form['customer_profile_shipping']['#title'] = t($form['customer_profile_shipping']['#title']);
    }
  }

  if ($form_id == 'commerce_checkout_form_complete') {
    $order = commerce_order_load(arg(1));
    $form['checkout_completion_message']['message'] = array(
      '#markup' => '<div class="checkout-completion-message">'
        . t('Your order number is @order-number.', array('@order-number' => $order->order_id))
        . '<br />'
        . t('You can <a href="!order-url">view your order</a> on your account page when logged in.', array('!order-url' => url('user/' . $order->uid . '/orders/' . $order->order_id)))
        . '<br /><br />'
        . t('<a href="!site-url">Return to the front page.</a>', array('!site-url' => url('<front>')))
        . '</div>',
    );
  }
}

/**
 * Implements hook_commerce_price_formatted_components_alter().
 */
function feature_shop_commons_commerce_price_formatted_components_alter(&$components, $price, $entity) {
  foreach ($components as &$component) {
    $component['title'] = t($component['title']);
  }
}

/**
 * Implements hook_commerce_checkout_pane_info_alter().
 */
function feature_shop_commons_commerce_checkout_pane_info_alter(&$checkout_panes) {
  foreach (array('billing', 'shipping') as $type) {
    if (!empty($checkout_panes['customer_profile_' . $type])) {
      $checkout_panes['customer_profile_' . $type]['title'] = t($checkout_panes['customer_profile_' . $type]['title']);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function feature_shop_commons_form_views_form_commerce_cart_form_default_alter(&$form, &$form_state, $form_id) {
  $order = $form_state['order'];
  $interval = _commerce_cart_expiration_get_interval();
  $js_path = drupal_get_path('module', 'feature_shop_commons') . '/js';
  $form['expiration'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('expiration'),
      'data-cart-countdown' => ($order->changed + $interval),
      'data-cart-id' => $order->order_id,
    ),
    '#weight' => $form['actions']['#weight'],
    'message' => array(
      '#markup' => 'Validité du panier : <span>' . format_date($order->changed + $interval) . '</span>',
    ),
    '#attached' => array(
      'js' => array(
        $js_path . '/jquery.countdown/jquery.countdown.min.js',
        $js_path . '/cart-countdown.js',
      ),
    ),
  );
  $form['actions']['#weight'] += 1;

  // Ensure things are clear when cart has expired.
  if ($order->changed + $interval <= REQUEST_TIME) {
    // Show an accurate message.
    $form['expiration']['message']['#markup'] = 'Votre panier a expiré !';
    $form['expiration']['#attributes']['class'][] = 'disabled';
    $form['expiration']['#attributes']['class'][] = 'cart-expired';

    // Disable buttons.
    $form['actions']['submit']['#disabled'] = TRUE;
    $form['actions']['checkout']['#disabled'] = TRUE;
    $form['edit_delete']['#disabled'] = TRUE;
  }
}

/**
 * Implements hook_default_rules_configuration_alter().
 */
function feature_shop_commons_default_rules_configuration_alter(&$configs) {
  if (!empty($configs['commerce_cart_expiration_delete_expired_carts'])) {
    $configs['commerce_cart_expiration_delete_expired_carts'] = rules_import('{ "commerce_cart_expiration_delete_expired_carts" : {
        "LABEL" : "Delete expired carts",
        "PLUGIN" : "reaction rule",
        "OWNER" : "rules",
        "REQUIRES" : [ "commerce_cart_expiration" ],
        "ON" : { "commerce_cart_expiration_cron" : [] },
        "DO" : [
          { "commerce_cart_expiration_delete_orders" : { "interval" : 1800, "limit" : "100" } }
        ]
      }
    }');
  }
  if (!empty($configs['commerce_payment_paypal_wps'])) {
    $configs['commerce_payment_paypal_wps'] = rules_import('{ "commerce_payment_paypal_wps" : {
        "LABEL" : "PayPal WPS",
        "PLUGIN" : "reaction rule",
        "OWNER" : "rules",
        "TAGS" : [ "Commerce Payment" ],
        "REQUIRES" : [ "commerce_payment" ],
        "ON" : { "commerce_payment_methods" : [] },
        "DO" : [
          { "commerce_payment_enable_paypal_wps" : {
              "commerce_order" : [ "commerce-order" ],
              "payment_method" : { "value" : {
                  "method_id" : "paypal_wps",
                  "settings" : {
                    "business" : "tresorier@terraludis.org",
                    "currency_code" : "EUR",
                    "allow_supported_currencies" : 0,
                    "language" : "FR",
                    "server" : "live",
                    "payment_action" : "sale",
                    "ipn_logging" : "notification",
                    "receiver_emails" : "",
                    "ipn_create_billing_profile" : 0,
                    "show_payment_instructions" : 0
                  }
                }
              }
            }
          }
        ]
      }
    }');
    $configs['commerce_payment_paypal_wps']->active = TRUE;
  }
}
